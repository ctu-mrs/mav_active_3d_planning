<launch>
  <!-- Gazebo arguments -->
  <arg name="gui" default="false"/>
  <arg name="verbose_gazebo" default="false"/>

  <!-- Voxblox arguments -->
  <arg name="voxels_per_side" default="16"/>
  <arg name="ray_length" default="5.0"/>
  <arg name="method" default="merged"/>
  <arg name="verbose_voxblox" default="false"/>
  
  <!--  Planner arguments-->
  <arg name="planner_config" default="planners/example_config_v2.yaml"/>
  
  <!--  Experiment arguments -->  
  <arg name="experiment_config" default="Maze.yaml"/>  
  

  <!-- *** Run the Simulation *** -->
  <!-- Load experiment config -->
  <rosparam command="load" file="$(find active_3d_planning_app_reconstruction)/cfg/experiments/$(arg experiment_config)"/>

  <arg name="UAV_NAME"   default="$(env UAV_NAME)" /> 

    <group ns="$(arg UAV_NAME)">

      <arg name="voxel_size" default="0.05"/>
      <arg name="voxblox_config" default=""/>

          <node name="voxblox_node" pkg="voxblox_ros" type="esdf_server" output="screen" args="-alsologtostderr">
            <remap from="pointcloud" to="point_cloud_manager/transformed_pointcloud_out" />
            <remap from="voxblox_node/esdf_map_out" to="voxblox_node/esdf_map_out" />
            <remap from="voxblox_node/tsdf_map_out" to="voxblox_node/tsdf_map_out" />
            <param name="use_tf_transforms" value="true" />
            <param name="update_mesh_every_n_sec" value="0.5" />
            <param name="publish_tsdf_map" value="true" />
            <param name="publish_esdf_map" value="true" />
            <param name="tsdf_voxel_size" value="$(arg voxel_size)" />
            <param name="tsdf_voxels_per_side" value="$(arg voxels_per_side)" />
            <param name="color_mode" value="normals" />
            <param name="update_mesh_every_n_sec" value="0.5" />
            <param name="method" value="$(arg method)" />
            <param name="max_ray_length" value="$(arg ray_length)" />
            <param name="allow_clear" value="true" />
            <param name="verbose" value="$(arg verbose_voxblox)" />
            <param name="publish_map_incremental" value="true" />
            
            <param name="world_frame" value="$(arg UAV_NAME)/local_origin" />
            <param name="pose_corrected_frame" value="$(arg UAV_NAME)/pose_corrected" />
          </node>

      <node name="planner_node" pkg="active_3d_planning_app_reconstruction" type="reconstruction_planner_node" output="screen" respawn="false">
        <!-- <remap from="pointcloud" to="/$(arg UAV_NAME)/rgbd/points_processed" /> -->
        <remap from="planner_node/esdf_map_in" to="voxblox_node/esdf_map_out" />
        <remap from="planner_node/tsdf_map_in" to="voxblox_node/tsdf_map_out" />
        <param name="use_tf_transforms" value="false" />
        <param name="tsdf_voxel_size" value="$(arg voxel_size)" />
        <param name="tsdf_voxels_per_side" value="$(arg voxels_per_side)" />
        <param name="update_mesh_every_n_sec" value="0.0" />   
        <param name="publish_traversable" value="false" /> 
        <param name="publish_map_incremental" value="true" />
        <!-- <param name="visualize" value="true" /> -->
        <param name="log_performance" value="false" />  
        <!-- <rosparam file="$(arg voxblox_config)"/> -->
        <!-- <param name="mesh_filename" value="$(find voxblox_ros)/mesh_results/$(anon resulted_map).ply" /> -->
            	<!-- General Settings -->
        <remap from="odometry" to="/$(arg UAV_NAME)/estimation_manager/odom_main" />

        <param name="trajectory_evaluator/bounding_volume_args" value="/target_bounding_volume" />
        <param name="trajectory_generator/bounding_volume_args" value="/map_bounding_volume" />
        <!-- <remap from="command/trajectory" to="/$(arg UAV_NAME)/trajectory_generation/path" /> -->

        <!-- Build the Planner by Configuration     -->
        <rosparam command="load" file="$(find active_3d_planning_app_reconstruction)/cfg/$(arg planner_config)"/>
      </node>
      
  </group>

  <!-- RVIZ Visualization -->
  <!-- <node type="rviz" name="rviz_voxblox" pkg="rviz" args="-d $(find active_3d_planning_app_reconstruction)/cfg/experiments/experiment_visualization.rviz"/> -->
</launch>
